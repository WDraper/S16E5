drop view Employee_view ;
drop view Previous_Employee_view ;
drop view Manager_view ;
drop view President_view ;
drop view Interim_Manager_view ;
drop view Current_Project_view ;
drop view Previous_Project_view ;

create view Employee_view as
SELECT 
    person_id,
    person_type,
    first_name,
    last_name,
    home_address,
    city,
    state,
    zipcode,
    home_phone,
    us_citizen,
    employee_id,
    salary,
    salary_exception,
    isFired,
    quit,
    bonus,
    dept_id,
    spouse_id
FROM P_Person where person_type = 'Employee' ;

create or replace TRIGGER Employee_trigger
     INSTEAD OF insert ON Employee_view
     FOR EACH ROW
BEGIN
    insert into P_Person(
        person_id,
        person_type,
        first_name,
        last_name,
        home_address,
        city,
        state,
        zipcode,
        home_phone,
        us_citizen,
        employee_id,
        salary,
        salary_exception,
        isFired,
        quit,
        bonus,
        dept_id,
        spouse_id)
    VALUES ( 
        :NEW.person_id,
        'Employee',
        :NEW.first_name,
        :NEW.last_name,
        :NEW.home_address,
        :NEW.city,
        :NEW.state,
        :NEW.zipcode,
        :NEW.home_phone,
        :NEW.us_citizen,
        :NEW.employee_id,
        :NEW.salary,
        :NEW.salary_exception,
        :NEW.isFired,
        :NEW.quit,
        :NEW.bonus,
        :NEW.dept_id,
        :NEW.spouse_id) ;
END;
/

create view Previous_Employee_view as
SELECT 
    person_id,
    person_type,
    first_name,
    last_name,
    home_address,
    city,
    state,
    zipcode,
    home_phone,
    us_citizen,
    employee_id,
    salary,
    salary_exception,
    isFired,
    quit,
    bonus,
    dept_id,
    spouse_id
FROM P_Person where person_type = 'Previous_Employee' ;

create or replace TRIGGER Previous_Employee_trigger
     INSTEAD OF insert ON Previous_Employee_view
     FOR EACH ROW
BEGIN
    insert into P_Person(
        person_id,
        person_type,
        first_name,
        last_name,
        home_address,
        city,
        state,
        zipcode,
        home_phone,
        us_citizen,
        employee_id,
        salary,
        salary_exception,
        isFired,
        quit,
        bonus,
        dept_id,
        spouse_id)
    VALUES ( 
        :NEW.person_id,
        'Employee',
        :NEW.first_name,
        :NEW.last_name,
        :NEW.home_address,
        :NEW.city,
        :NEW.state,
        :NEW.zipcode,
        :NEW.home_phone,
        :NEW.us_citizen,
        :NEW.employee_id,
        :NEW.salary,
        :NEW.salary_exception,
        :NEW.isFired,
        :NEW.quit,
        :NEW.bonus,
        :NEW.dept_id,
        :NEW.spouse_id) ;
END;
/

create view Manager_view as
SELECT 
    person_id,
    person_type,
    first_name,
    last_name,
    home_address,
    city,
    state,
    zipcode,
    home_phone,
    us_citizen,
    employee_id,
    salary,
    salary_exception,
    isFired,
    quit,
    bonus,
    dept_id,
    spouse_id
FROM P_Person where person_type = 'Manager' ;

create or replace TRIGGER Manager_trigger
     INSTEAD OF insert ON Manager_view
     FOR EACH ROW
BEGIN
    insert into P_Person(
        person_id,
        person_type,
        first_name,
        last_name,
        home_address,
        city,
        state,
        zipcode,
        home_phone,
        us_citizen,
        employee_id,
        salary,
        salary_exception,
        isFired,
        quit,
        bonus,
        dept_id,
        spouse_id)
    VALUES ( 
        :NEW.person_id,
        'Employee',
        :NEW.first_name,
        :NEW.last_name,
        :NEW.home_address,
        :NEW.city,
        :NEW.state,
        :NEW.zipcode,
        :NEW.home_phone,
        :NEW.us_citizen,
        :NEW.employee_id,
        :NEW.salary,
        :NEW.salary_exception,
        :NEW.isFired,
        :NEW.quit,
        :NEW.bonus,
        :NEW.dept_id,
        :NEW.spouse_id) ;
END;
/

create view President_view as
SELECT 
    person_id,
    person_type,
    first_name,
    last_name,
    home_address,
    city,
    state,
    zipcode,
    home_phone,
    us_citizen,
    employee_id,
    salary,
    salary_exception,
    isFired,
    quit,
    bonus,
    dept_id,
    spouse_id
FROM P_Person where person_type = 'President' ;

create or replace TRIGGER President_trigger
     INSTEAD OF insert ON President_view
     FOR EACH ROW
BEGIN
    insert into P_Person(
        person_id,
        person_type,
        first_name,
        last_name,
        home_address,
        city,
        state,
        zipcode,
        home_phone,
        us_citizen,
        employee_id,
        salary,
        salary_exception,
        isFired,
        quit,
        bonus,
        dept_id,
        spouse_id)
    VALUES ( 
        :NEW.person_id,
        'Employee',
        :NEW.first_name,
        :NEW.last_name,
        :NEW.home_address,
        :NEW.city,
        :NEW.state,
        :NEW.zipcode,
        :NEW.home_phone,
        :NEW.us_citizen,
        :NEW.employee_id,
        :NEW.salary,
        :NEW.salary_exception,
        :NEW.isFired,
        :NEW.quit,
        :NEW.bonus,
        :NEW.dept_id,
        :NEW.spouse_id) ;
END;
/

create view Interim_Manager_view as
SELECT 
    person_id,
    person_type,
    first_name,
    last_name,
    home_address,
    city,
    state,
    zipcode,
    home_phone,
    us_citizen,
    employee_id,
    salary,
    salary_exception,
    isFired,
    quit,
    bonus,
    dept_id,
    spouse_id
FROM P_Person where person_type = 'Interim_Manager' ;

create or replace TRIGGER Interim_Manager_trigger
     INSTEAD OF insert ON Interim_Manager_view
     FOR EACH ROW
BEGIN
    insert into P_Person(
        person_id,
        person_type,
        first_name,
        last_name,
        home_address,
        city,
        state,
        zipcode,
        home_phone,
        us_citizen,
        employee_id,
        salary,
        salary_exception,
        isFired,
        quit,
        bonus,
        dept_id,
        spouse_id)
    VALUES ( 
        :NEW.person_id,
        'Employee',
        :NEW.first_name,
        :NEW.last_name,
        :NEW.home_address,
        :NEW.city,
        :NEW.state,
        :NEW.zipcode,
        :NEW.home_phone,
        :NEW.us_citizen,
        :NEW.employee_id,
        :NEW.salary,
        :NEW.salary_exception,
        :NEW.isFired,
        :NEW.quit,
        :NEW.bonus,
        :NEW.dept_id,
        :NEW.spouse_id) ;
END;
/

create view Current_Project_view as
SELECT 
    project_id,
    project_title,
    project_type,
    project_active,
    end_date,
    est_person_hours,
    manager_id,
    dept_id
FROM P_Project where project_type = 'Current_Project' ;

create or replace TRIGGER Current_Project_trigger
     INSTEAD OF insert ON Current_Project_view
     FOR EACH ROW
BEGIN
    insert into P_Project(
        project_id,
        project_title,
        project_type,
        project_active,
        end_date,
        est_person_hours,
        manager_id,
        dept_id)
    VALUES ( 
        :NEW.project_id,
        :NEW.project_title,
        'Current_Project',
        :NEW.project_active,
        :NEW.end_date,
        :NEW.est_person_hours,
        :NEW.manager_id,
        :NEW.dept_id) ;
END;
/

create view Previous_Project_view as
SELECT 
    project_id,
    project_title,
    project_type,
    project_active,
    end_date,
    est_person_hours,
    manager_id,
    dept_id
FROM P_Project where project_type = 'Previous_Project' ;

create or replace TRIGGER Previous_Project_trigger
     INSTEAD OF insert ON Previous_Project_view
     FOR EACH ROW
BEGIN
    insert into P_Project(
        project_id,
        project_title,
        project_type,
        project_active,
        end_date,
        est_person_hours,
        manager_id,
        dept_id)
    VALUES ( 
        :NEW.project_id,
        :NEW.project_title,
        'Previous_Project',
        :NEW.project_active,
        :NEW.end_date,
        :NEW.est_person_hours,
        :NEW.manager_id,
        :NEW.dept_id) ;
END;
/